cat << CTAG
{
	name:SOUND,
		elements:[
			`if [ -d "/sys/kernel/sound_control_3" ]; then
				$BB echo '{ SPane:{
						title:"Sound Profiles",
						description:"After you apply a profile, turn audio Off/On to update. Select custom profile if you set controls manually."
					}},
						{ SOptionList:{
							default:Custom,
							action:"soundfaux /res/synapse/files/sound_prof",
							values:[ Custom, Stock, Quality, Loudness, Quiet,
							],
							notify:[
								{
									on:APPLY,
									do:[ REFRESH, APPLY ],
									to:[
										"soundfaux /sys/kernel/sound_control_3/gpl_headphone_gain",'
										[ "\`sh $DEVICE HasHeadphonePowerAmp\`" == "1" ] && $BB echo '"soundfaux /sys/kernel/sound_control_3/gpl_headphone_pa_gain",'
										$BB echo '"soundfaux /sys/kernel/sound_control_3/gpl_mic_gain",
										"soundfaux /sys/kernel/sound_control_3/gpl_cam_mic_gain"
									]
								}
							]
						}},
					{ SPane:{
						title:"Gain Controls",
					}},
						{ SSeekBar:{
							title:"Headphone (Left & Right)",
							min:-30,
							max:15,
							default:0,
							action:"soundfaux /sys/kernel/sound_control_3/gpl_headphone_gain",
						}},'
						if [ "\`sh $DEVICE HasHeadphonePowerAmp\`" == "1" ]; then
							$BB echo '{ SSeekBar:{
								title:"Headphone PowerAmp (Left & Right)",
								min:-6,
								max:6,
								default:0,
								action:"soundfaux /sys/kernel/sound_control_3/gpl_headphone_pa_gain",
							}},'
						fi
						$BB echo '{ SSeekBar:{
							title:"Handset Microphone",
							min:-30,
							max:15,
							default:0,
							action:"soundfaux /sys/kernel/sound_control_3/gpl_mic_gain",
						}},
						{ SSeekBar:{
							title:"Camcorder Microphone",
							min:-30,
							max:15,
							default:0,
							action:"soundfaux /sys/kernel/sound_control_3/gpl_cam_mic_gain",
						}},'
			fi`
			`[ -d "/sys/class/misc/soundcontrol" ] && SC=/sys/class/misc/soundcontrol;
			[ -d "/sys/devices/virtual/misc/soundcontrol" ] && SC=/sys/devices/virtual/misc/soundcontrol;
			
			if [ -f "$SC/headset_boost" ]; then
				HB=\`$BB cat $SC/headset_boost\`;
				MB=\`$BB cat $SC/mic_boost\`;
				MG=\`$BB cat $SC/mic_gain\`;
				SB=\`$BB cat $SC/speaker_boost\`;
				VB=\`$BB cat $SC/volume_boost\`;
				$BB echo '{ SPane:{
					title:"Sound Control",
				}},
					{ SSeekBar:{
						title:"Headset Boost",
						min:-11,
						max:15,
						default:'$HB',
						action:"generic '$SC'/headset_boost",
					}},
					{ SSeekBar:{
						title:"Microphone Boost",
						min:-11,
						max:15,
						default:'$MB',
						action:"generic '$SC'/mic_boost",
					}},
					{ SSeekBar:{
						title:"Microphone Gain",
						min:0,
						max:10,
						default:'$MG',
						action:"generic '$SC'/mic_gain",
					}},
					{ SSeekBar:{
						title:"Speaker Boost",
						min:-11,
						max:15,
						default:'$SB',
						action:"generic '$SC'/speaker_boost",
					}},
					{ SSeekBar:{
						title:"Volume Boost",
						min:0,
						max:20,
						default:'$VB',
						action:"generic '$SC'/volume_boost",
					}},'
				if [ -f "$SC/highperf_enabled" ]; then
				HPE=\`$BB cat $SC/highperf_enabled\`;
					$BB echo '{ SPane:{
					title:"High performance",
					description:"Class AB mode for headphone 192Khz playback.",
				}},
					{ SCheckBox:{
						label:"Enable",
						default:'$HPE',
						action:"generic '$SC'/highperf_enabled",
					}},'
				fi
			fi`
		]
}
CTAG
